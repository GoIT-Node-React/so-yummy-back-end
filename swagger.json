{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "So Yummy",
    "description": "Api",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "http://localhost:8001/api"
    },
    {
      "url": "https://so-yummy-s9sp.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "users",
      "description": "User endpoints"
    },
    {
      "name": "ingredients",
      "description": "Ingredients endpoints"
    },
    {
      "name": "recipes",
      "description": "Recipe endpoints"
    },
    {
      "name": "own-recipes",
      "description": "Own recipe endpoints"
    },
    {
      "name": "search",
      "description": "Search endpoint"
    },
    {
      "name": "favorite",
      "description": "Favorite endpoints"
    },
    {
      "name": "shopping-list",
      "description": "Shopping list endpoints"
    },
    {
      "name": "popular-recipes",
      "description": "Popular recipes endpoints"
    },
    {
      "name": "subscribe",
      "description": "Subscribe endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii",
                    "minLength": 1,
                    "maxLength": 30
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "minLength": 3,
                    "maxLength": 30,
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 201
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "User id",
                              "example": "507f1f77bcf86cd799439011"
                            },
                            "name": {
                              "type": "string",
                              "description": "User name",
                              "example": "Andrii"
                            },
                            "email": {
                              "type": "string",
                              "description": "User email",
                              "format": "email"
                            },
                            "subscription": {
                              "type": "string",
                              "nullable": true,
                              "description": "User email subscription",
                              "format": "email",
                              "example": null
                            },
                            "avatarURL": {
                              "type": "string",
                              "description": "User avatar",
                              "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email is already in use"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User login",
        "requestBody": {
          "description": "Logins's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "minLength": 3,
                    "maxLength": 30,
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "User access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjVhNmY2MjIyNjczM2IwNzZmOTE4OSIsImlhdCI6MTY4MDE5MDQxNiwiZXhwIjoxNjgwMjc2ODE2fQ.9odTokQdUwOV-jBADF_XfBUuB5OGsWqgjhEu9lIJcw8"
                        },
                        "refreshToken": {
                          "type": "string",
                          "description": "User refresh token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjcxNmRlNzFhZTgyMmE5NWI0ZTQ2NSIsImlhdCI6MTY4MDUxOTU2MSwiZXhwIjoxNjgxMTI0MzYxfQ.JtGkHY-xy18IMrMqBNywbHuzw6EHKV5PXb2C_YLPzNs"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "User id",
                              "example": "507f1f77bcf86cd799439011"
                            },
                            "name": {
                              "type": "string",
                              "description": "User name",
                              "example": "Andrii"
                            },
                            "email": {
                              "type": "string",
                              "description": "User email",
                              "format": "email"
                            },
                            "subscription": {
                              "type": "string",
                              "nullable": true,
                              "description": "User email subscription",
                              "format": "email",
                              "example": null
                            },
                            "avatarURL": {
                              "type": "string",
                              "description": "User avatar",
                              "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "Invalid token"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get user info by token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "User id",
                              "example": "507f1f77bcf86cd799439011"
                            },
                            "name": {
                              "type": "string",
                              "description": "User name",
                              "example": "Andrii"
                            },
                            "email": {
                              "type": "string",
                              "description": "User email",
                              "format": "email"
                            },
                            "subscription": {
                              "type": "string",
                              "nullable": true,
                              "description": "User email subscription",
                              "format": "email",
                              "example": null
                            },
                            "avatarURL": {
                              "type": "string",
                              "description": "User avatar",
                              "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh token",
        "requestBody": {
          "description": "Refresh's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "User refresh token",
                    "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjcxNmRlNzFhZTgyMmE5NWI0ZTQ2NSIsImlhdCI6MTY4MDUxOTU2MSwiZXhwIjoxNjgxMTI0MzYxfQ.JtGkHY-xy18IMrMqBNywbHuzw6EHKV5PXb2C_YLPzNs"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "User access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjVhNmY2MjIyNjczM2IwNzZmOTE4OSIsImlhdCI6MTY4MDE5MDQxNiwiZXhwIjoxNjgwMjc2ODE2fQ.9odTokQdUwOV-jBADF_XfBUuB5OGsWqgjhEu9lIJcw8"
                        },
                        "refreshToken": {
                          "type": "string",
                          "description": "User refresh token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjcxNmRlNzFhZTgyMmE5NWI0ZTQ2NSIsImlhdCI6MTY4MDUxOTU2MSwiZXhwIjoxNjgxMTI0MzYxfQ.JtGkHY-xy18IMrMqBNywbHuzw6EHKV5PXb2C_YLPzNs"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Invalid token"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Authorization with google",
        "responses": ""
      }
    },
    "/own-recipes": {
      "post": {
        "tags": [
          "own-recipes"
        ],
        "summary": "Create new recipe",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Recipe's details object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "thumb",
                  "title",
                  "category",
                  "instructions",
                  "description",
                  "time",
                  "ingredients"
                ],
                "properties": {
                  "thumb": {
                    "type": "string",
                    "format": "binary",
                    "description": "Recipe's image"
                  },
                  "title": {
                    "type": "string",
                    "description": "Recipe's title"
                  },
                  "category": {
                    "type": "string",
                    "description": "Recipe's category"
                  },
                  "instructions": {
                    "type": "string",
                    "description": "Recipe's instruction"
                  },
                  "description": {
                    "type": "string",
                    "description": "Recipe's description"
                  },
                  "time": {
                    "type": "string",
                    "description": "Recipe's time to cook"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Ingredient's id (ObjectId)"
                        },
                        "measure": {
                          "type": "string",
                          "description": "Measure"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe created successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 201
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recipe": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Recipe's title"
                            },
                            "category": {
                              "type": "string",
                              "description": "Recipe's category"
                            },
                            "area": {
                              "type": "string",
                              "description": "Recipe's area"
                            },
                            "instructions": {
                              "type": "string",
                              "description": "Instructions for cooking"
                            },
                            "description": {
                              "type": "string",
                              "description": "Recipe's description"
                            },
                            "thumb": {
                              "type": "string",
                              "description": "Link to get recipe's image from cloudinary"
                            },
                            "cloudinaryImageName": {
                              "type": "string",
                              "description": "Name of image in cloudinary storage"
                            },
                            "preview": {
                              "type": "string"
                            },
                            "time": {
                              "type": "string",
                              "description": "Time for cooking"
                            },
                            "popularity": {
                              "type": "string"
                            },
                            "favorites": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "User's id which will add this recipe to favorite"
                              }
                            },
                            "likes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "youtube": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ingredients": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Ingredient's id"
                                  },
                                  "measure": {
                                    "type": "string",
                                    "description": "Ingredient's amount in different units"
                                  }
                                }
                              }
                            },
                            "owner": {
                              "type": "string",
                              "description": "Person's id which added recipe"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Recipe's id, created MongoDB"
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "Date and time when recipe was created"
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "Date and time when recipe updates"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "own-recipes"
        ],
        "summary": "Get own recipes list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "The numbers of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recipes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Recipe's title"
                              },
                              "category": {
                                "type": "string",
                                "description": "Recipe's category"
                              },
                              "area": {
                                "type": "string",
                                "description": "Recipe's area"
                              },
                              "instructions": {
                                "type": "string",
                                "description": "Instructions for cooking"
                              },
                              "description": {
                                "type": "string",
                                "description": "Recipe's description"
                              },
                              "thumb": {
                                "type": "string",
                                "description": "Link to get recipe's image from cloudinary"
                              },
                              "cloudinaryImageName": {
                                "type": "string",
                                "description": "Name of image in cloudinary storage"
                              },
                              "preview": {
                                "type": "string"
                              },
                              "time": {
                                "type": "string",
                                "description": "Time for cooking"
                              },
                              "popularity": {
                                "type": "string"
                              },
                              "favorites": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "User's id which will add this recipe to favorite"
                                }
                              },
                              "likes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "youtube": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ingredients": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Ingredient's id"
                                    },
                                    "measure": {
                                      "type": "string",
                                      "description": "Ingredient's amount in different units"
                                    }
                                  }
                                }
                              },
                              "owner": {
                                "type": "string",
                                "description": "Person's id which added recipe"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Recipe's id, created MongoDB"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Date and time when recipe was created"
                              },
                              "updatedAt": {
                                "type": "string",
                                "description": "Date and time when recipe updates"
                              }
                            }
                          }
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total recipe's amount"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Recipe's amount per page"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request query)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/own-recipes/:{recipeId}": {
      "delete": {
        "tags": [
          "own-recipes"
        ],
        "summary": "Delete recipe",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Recipe's id (ObjectId)"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recipe": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Recipe's title"
                            },
                            "category": {
                              "type": "string",
                              "description": "Recipe's category"
                            },
                            "area": {
                              "type": "string",
                              "description": "Recipe's area"
                            },
                            "instructions": {
                              "type": "string",
                              "description": "Instructions for cooking"
                            },
                            "description": {
                              "type": "string",
                              "description": "Recipe's description"
                            },
                            "thumb": {
                              "type": "string",
                              "description": "Link to get recipe's image from cloudinary"
                            },
                            "cloudinaryImageName": {
                              "type": "string",
                              "description": "Name of image in cloudinary storage"
                            },
                            "preview": {
                              "type": "string"
                            },
                            "time": {
                              "type": "string",
                              "description": "Time for cooking"
                            },
                            "popularity": {
                              "type": "string"
                            },
                            "favorites": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "User's id which will add this recipe to favorite"
                              }
                            },
                            "likes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "youtube": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ingredients": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Ingredient's id"
                                  },
                                  "measure": {
                                    "type": "string",
                                    "description": "Ingredient's amount in different units"
                                  }
                                }
                              }
                            },
                            "owner": {
                              "type": "string",
                              "description": "Person's id which added recipe"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Recipe's id, created MongoDB"
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "Date and time when recipe was created"
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "Date and time when recipe updates"
                            }
                          }
                        }
                      },
                      "total": {
                        "type": "integer",
                        "description": "Total recipe's amount"
                      },
                      "page": {
                        "type": "integer",
                        "description": "Current page"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "Recipe's amount per page"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request path)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/popular-recipes": {
      "get": {
        "tags": [
          "popular-recipes"
        ],
        "summary": "Get popular recipes list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "The numbers of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recipes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Recipe's id (ObjectId)"
                              },
                              "title": {
                                "type": "string",
                                "description": "Recipe's title"
                              },
                              "category": {
                                "type": "string",
                                "description": "Recipe's category"
                              },
                              "area": {
                                "type": "string",
                                "description": "Recipe's area"
                              },
                              "instructions": {
                                "type": "string",
                                "description": "Instructions for cooking"
                              },
                              "description": {
                                "type": "string",
                                "description": "Recipe's description"
                              },
                              "thumb": {
                                "type": "string",
                                "description": "Link to get recipe's image from image's storage"
                              },
                              "preview": {
                                "type": "string",
                                "description": "Link to get recipe's image from image's storage"
                              },
                              "time": {
                                "type": "string",
                                "description": "Time for cooking"
                              },
                              "popularity": {
                                "type": "integer"
                              },
                              "favorites": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "User's id which added this recipe to favorite"
                                }
                              },
                              "likes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "User's id which liked this recipe"
                                }
                              },
                              "youtube": {
                                "type": "string",
                                "description": "Link to youtube video"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ingredients": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Ingredient's id (ObjectId)"
                                    },
                                    "measure": {
                                      "type": "string",
                                      "description": "Ingredient's amount in different units"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Date and time when recipe was created"
                              },
                              "updatedAt": {
                                "type": "string",
                                "description": "Date and time when recipe updates"
                              },
                              "favoriteCount": {
                                "type": "integer",
                                "description": "Amount of users which added recipe to favorite"
                              }
                            }
                          }
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total recipe's amount"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Recipe's amount per page"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request query)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get a recipe by recipe name or ingredient name",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "ingredient"
              ]
            },
            "description": "Search's type"
          },
          {
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            },
            "description": "Search's query"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "The numbers of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recipes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "User id (ObjectId)",
                                "example": "640cd5ac2d9fecf12e889837"
                              },
                              "title": {
                                "type": "string",
                                "description": "Name of recipe",
                                "example": "Teriyaki Chicken Casserole"
                              },
                              "description": {
                                "type": "string",
                                "description": "A brief description of the dish",
                                "example": "A fusion dish that combines the flavors of chicken fajitas with creamy mac and cheese"
                              },
                              "thumb": {
                                "type": "string",
                                "description": "Large image of the dish",
                                "example": "https://www.themealdb.com/images/media/meals/qrqywr1503066605.jpg"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "Get ingredients",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "value",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            },
            "description": "Search's query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status text",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Response status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "ingredients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "User id (ObjectId)",
                                "example": "640cd5ac2d9fecf12e889837"
                              },
                              "ttl": {
                                "type": "string",
                                "description": "The name of the ingredient",
                                "example": "Salmon"
                              },
                              "desc": {
                                "type": "string",
                                "description": "Detailed description of the ingredient",
                                "example": "Salmon is the common name for several species of ray-finned fish in the family Salmonidae. Other fish in the same family include trout, char, grayling and whitefish. Salmon are native to tributaries of the North Atlantic (genus Salmo) and Pacific Ocean (genus Oncorhynchus). Many species of salmon have been introduced into non-native environments such as the Great Lakes of North America and Patagonia in South America. Salmon are intensively farmed in many parts of the world.\r\n\nTypically, salmon are anadromous: they hatch in fresh water, migrate to the ocean, then return to fresh water to reproduce. However, populations of several species are restricted to fresh water through their lives. Folklore has it that the fish return to the exact spot where they hatched to spawn. Tracking studies have shown this to be mostly true. A portion of a returning salmon run may stray and spawn in different freshwater systems; the percent of straying depends on the species of salmon. Homing behavior has been shown to depend on olfactory memory. Salmon date back to the Neogene."
                              },
                              "t": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "thb": {
                                "type": "string",
                                "description": "Small image of the ingredient",
                                "example": "https://res.cloudinary.com/ddbvbv5sp/image/upload/v1678564123/bwzvxyjxozyankmd6ky8.png"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Andrii",
            "minLength": 1,
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 3,
            "maxLength": 30,
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User id",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "subscription": {
                    "type": "string",
                    "nullable": true,
                    "description": "User email subscription",
                    "format": "email",
                    "example": null
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                  }
                }
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 3,
            "maxLength": 30,
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "User access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjVhNmY2MjIyNjczM2IwNzZmOTE4OSIsImlhdCI6MTY4MDE5MDQxNiwiZXhwIjoxNjgwMjc2ODE2fQ.9odTokQdUwOV-jBADF_XfBUuB5OGsWqgjhEu9lIJcw8"
              },
              "refreshToken": {
                "type": "string",
                "description": "User refresh token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjcxNmRlNzFhZTgyMmE5NWI0ZTQ2NSIsImlhdCI6MTY4MDUxOTU2MSwiZXhwIjoxNjgxMTI0MzYxfQ.JtGkHY-xy18IMrMqBNywbHuzw6EHKV5PXb2C_YLPzNs"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User id",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "subscription": {
                    "type": "string",
                    "nullable": true,
                    "description": "User email subscription",
                    "format": "email",
                    "example": null
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                  }
                }
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User id",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "subscription": {
                    "type": "string",
                    "nullable": true,
                    "description": "User email subscription",
                    "format": "email",
                    "example": null
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                  }
                }
              }
            }
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User refresh token",
            "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjcxNmRlNzFhZTgyMmE5NWI0ZTQ2NSIsImlhdCI6MTY4MDUxOTU2MSwiZXhwIjoxNjgxMTI0MzYxfQ.JtGkHY-xy18IMrMqBNywbHuzw6EHKV5PXb2C_YLPzNs"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "User access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjVhNmY2MjIyNjczM2IwNzZmOTE4OSIsImlhdCI6MTY4MDE5MDQxNiwiZXhwIjoxNjgwMjc2ODE2fQ.9odTokQdUwOV-jBADF_XfBUuB5OGsWqgjhEu9lIJcw8"
              },
              "refreshToken": {
                "type": "string",
                "description": "User refresh token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjcxNmRlNzFhZTgyMmE5NWI0ZTQ2NSIsImlhdCI6MTY4MDUxOTU2MSwiZXhwIjoxNjgxMTI0MzYxfQ.JtGkHY-xy18IMrMqBNywbHuzw6EHKV5PXb2C_YLPzNs"
              }
            }
          }
        }
      },
      "AddOwnRecipeRequest": {
        "type": "object",
        "required": [
          "thumb",
          "title",
          "category",
          "instructions",
          "description",
          "time",
          "ingredients"
        ],
        "properties": {
          "thumb": {
            "type": "string",
            "format": "binary",
            "description": "Recipe's image"
          },
          "title": {
            "type": "string",
            "description": "Recipe's title"
          },
          "category": {
            "type": "string",
            "description": "Recipe's category"
          },
          "instructions": {
            "type": "string",
            "description": "Recipe's instruction"
          },
          "description": {
            "type": "string",
            "description": "Recipe's description"
          },
          "time": {
            "type": "string",
            "description": "Recipe's time to cook"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Ingredient's id (ObjectId)"
                },
                "measure": {
                  "type": "string",
                  "description": "Measure"
                }
              }
            }
          }
        }
      },
      "AddOwnRecipeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "recipe": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Recipe's title"
                  },
                  "category": {
                    "type": "string",
                    "description": "Recipe's category"
                  },
                  "area": {
                    "type": "string",
                    "description": "Recipe's area"
                  },
                  "instructions": {
                    "type": "string",
                    "description": "Instructions for cooking"
                  },
                  "description": {
                    "type": "string",
                    "description": "Recipe's description"
                  },
                  "thumb": {
                    "type": "string",
                    "description": "Link to get recipe's image from cloudinary"
                  },
                  "cloudinaryImageName": {
                    "type": "string",
                    "description": "Name of image in cloudinary storage"
                  },
                  "preview": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string",
                    "description": "Time for cooking"
                  },
                  "popularity": {
                    "type": "string"
                  },
                  "favorites": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "User's id which will add this recipe to favorite"
                    }
                  },
                  "likes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "youtube": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Ingredient's id"
                        },
                        "measure": {
                          "type": "string",
                          "description": "Ingredient's amount in different units"
                        }
                      }
                    }
                  },
                  "owner": {
                    "type": "string",
                    "description": "Person's id which added recipe"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Recipe's id, created MongoDB"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Date and time when recipe was created"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Date and time when recipe updates"
                  }
                }
              }
            }
          }
        }
      },
      "GetOwnRecipesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recipes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Recipe's title"
                    },
                    "category": {
                      "type": "string",
                      "description": "Recipe's category"
                    },
                    "area": {
                      "type": "string",
                      "description": "Recipe's area"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instructions for cooking"
                    },
                    "description": {
                      "type": "string",
                      "description": "Recipe's description"
                    },
                    "thumb": {
                      "type": "string",
                      "description": "Link to get recipe's image from cloudinary"
                    },
                    "cloudinaryImageName": {
                      "type": "string",
                      "description": "Name of image in cloudinary storage"
                    },
                    "preview": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string",
                      "description": "Time for cooking"
                    },
                    "popularity": {
                      "type": "string"
                    },
                    "favorites": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "User's id which will add this recipe to favorite"
                      }
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "youtube": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Ingredient's id"
                          },
                          "measure": {
                            "type": "string",
                            "description": "Ingredient's amount in different units"
                          }
                        }
                      }
                    },
                    "owner": {
                      "type": "string",
                      "description": "Person's id which added recipe"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Recipe's id, created MongoDB"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date and time when recipe was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date and time when recipe updates"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total recipe's amount"
              },
              "page": {
                "type": "integer",
                "description": "Current page"
              },
              "limit": {
                "type": "integer",
                "description": "Recipe's amount per page"
              }
            }
          }
        }
      },
      "DeleteOwnRecipeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recipe": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Recipe's title"
                  },
                  "category": {
                    "type": "string",
                    "description": "Recipe's category"
                  },
                  "area": {
                    "type": "string",
                    "description": "Recipe's area"
                  },
                  "instructions": {
                    "type": "string",
                    "description": "Instructions for cooking"
                  },
                  "description": {
                    "type": "string",
                    "description": "Recipe's description"
                  },
                  "thumb": {
                    "type": "string",
                    "description": "Link to get recipe's image from cloudinary"
                  },
                  "cloudinaryImageName": {
                    "type": "string",
                    "description": "Name of image in cloudinary storage"
                  },
                  "preview": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string",
                    "description": "Time for cooking"
                  },
                  "popularity": {
                    "type": "string"
                  },
                  "favorites": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "User's id which will add this recipe to favorite"
                    }
                  },
                  "likes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "youtube": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Ingredient's id"
                        },
                        "measure": {
                          "type": "string",
                          "description": "Ingredient's amount in different units"
                        }
                      }
                    }
                  },
                  "owner": {
                    "type": "string",
                    "description": "Person's id which added recipe"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Recipe's id, created MongoDB"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Date and time when recipe was created"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Date and time when recipe updates"
                  }
                }
              }
            },
            "total": {
              "type": "integer",
              "description": "Total recipe's amount"
            },
            "page": {
              "type": "integer",
              "description": "Current page"
            },
            "limit": {
              "type": "integer",
              "description": "Recipe's amount per page"
            }
          }
        }
      },
      "GetPopularRecipesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recipes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Recipe's id (ObjectId)"
                    },
                    "title": {
                      "type": "string",
                      "description": "Recipe's title"
                    },
                    "category": {
                      "type": "string",
                      "description": "Recipe's category"
                    },
                    "area": {
                      "type": "string",
                      "description": "Recipe's area"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instructions for cooking"
                    },
                    "description": {
                      "type": "string",
                      "description": "Recipe's description"
                    },
                    "thumb": {
                      "type": "string",
                      "description": "Link to get recipe's image from image's storage"
                    },
                    "preview": {
                      "type": "string",
                      "description": "Link to get recipe's image from image's storage"
                    },
                    "time": {
                      "type": "string",
                      "description": "Time for cooking"
                    },
                    "popularity": {
                      "type": "integer"
                    },
                    "favorites": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "User's id which added this recipe to favorite"
                      }
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "User's id which liked this recipe"
                      }
                    },
                    "youtube": {
                      "type": "string",
                      "description": "Link to youtube video"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Ingredient's id (ObjectId)"
                          },
                          "measure": {
                            "type": "string",
                            "description": "Ingredient's amount in different units"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date and time when recipe was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date and time when recipe updates"
                    },
                    "favoriteCount": {
                      "type": "integer",
                      "description": "Amount of users which added recipe to favorite"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total recipe's amount"
              },
              "page": {
                "type": "integer",
                "description": "Current page"
              },
              "limit": {
                "type": "integer",
                "description": "Recipe's amount per page"
              }
            }
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recipes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "User id (ObjectId)",
                      "example": "640cd5ac2d9fecf12e889837"
                    },
                    "title": {
                      "type": "string",
                      "description": "Name of recipe",
                      "example": "Teriyaki Chicken Casserole"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the dish",
                      "example": "A fusion dish that combines the flavors of chicken fajitas with creamy mac and cheese"
                    },
                    "thumb": {
                      "type": "string",
                      "description": "Large image of the dish",
                      "example": "https://www.themealdb.com/images/media/meals/qrqywr1503066605.jpg"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IngredientsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "ingredients": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "User id (ObjectId)",
                      "example": "640cd5ac2d9fecf12e889837"
                    },
                    "ttl": {
                      "type": "string",
                      "description": "The name of the ingredient",
                      "example": "Salmon"
                    },
                    "desc": {
                      "type": "string",
                      "description": "Detailed description of the ingredient",
                      "example": "Salmon is the common name for several species of ray-finned fish in the family Salmonidae. Other fish in the same family include trout, char, grayling and whitefish. Salmon are native to tributaries of the North Atlantic (genus Salmo) and Pacific Ocean (genus Oncorhynchus). Many species of salmon have been introduced into non-native environments such as the Great Lakes of North America and Patagonia in South America. Salmon are intensively farmed in many parts of the world.\r\n\nTypically, salmon are anadromous: they hatch in fresh water, migrate to the ocean, then return to fresh water to reproduce. However, populations of several species are restricted to fresh water through their lives. Folklore has it that the fish return to the exact spot where they hatched to spawn. Tracking studies have shown this to be mostly true. A portion of a returning salmon run may stray and spawn in different freshwater systems; the percent of straying depends on the species of salmon. Homing behavior has been shown to depend on olfactory memory. Salmon date back to the Neogene."
                    },
                    "t": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "thb": {
                      "type": "string",
                      "description": "Small image of the ingredient",
                      "example": "https://res.cloudinary.com/ddbvbv5sp/image/upload/v1678564123/bwzvxyjxozyankmd6ky8.png"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}