{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "So Yummy",
    "description": "Api",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:8001/api" }],
  "tags": [
    {
      "name": "auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "users",
      "description": "User endpoints"
    },
    {
      "name": "ingredients",
      "description": "Ingredients endpoints"
    },
    {
      "name": "recipes",
      "description": "Recipe endpoints"
    },
    {
      "name": "own-recipes",
      "description": "Own recipe endpoints"
    },
    {
      "name": "search",
      "description": "Search endpoint"
    },
    {
      "name": "favorite",
      "description": "Favorite endpoints"
    },
    {
      "name": "shopping-list",
      "description": "Shopping list endpoints"
    },
    {
      "name": "popular-recipes",
      "description": "Popular recipes endpoints"
    },
    {
      "name": "subscribe",
      "description": "Subscribe endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email is already in use",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Logins's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "Invalid token"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["auth"],
        "summary": "Get user info by token",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/own-recipes": {
      "post": {
        "tags": ["own-recipes"],
        "summary": "Create new recipe",

        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Recipe's details object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddOwnRecipeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe created successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddOwnRecipeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["own-recipes"],
        "summary": "Get own recipes list",

        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            },

            "description": "Number of page and amount of recipes per page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            },
            "description": "Number of page and amount of recipes per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOwnRecipesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/own-recipes/:{recipeId}": {
      "delete": {
        "tags": ["own-recipes"],
        "summary": "Delete recipe",

        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string"
            },

            "description": "Recipe's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/popular-recipes": {
      "get": {
        "tags": ["popular-recipes"],
        "summary": "Get popular recipes list",

        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            },
            "description": "Number of current page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            },
            "description": "Amount of recipes per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPopularRecipesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Andrii",
            "minLength": 1,
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 3,
            "maxLength": 30,
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User id",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "subscription": {
                    "type": "string",
                    "nullable": true,
                    "description": "User email subscription",
                    "format": "email",
                    "example": null
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                  }
                }
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 3,
            "maxLength": 30,
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjVhNmY2MjIyNjczM2IwNzZmOTE4OSIsImlhdCI6MTY4MDE5MDQxNiwiZXhwIjoxNjgwMjc2ODE2fQ.9odTokQdUwOV-jBADF_XfBUuB5OGsWqgjhEu9lIJcw8"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User id",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "subscription": {
                    "type": "string",
                    "nullable": true,
                    "description": "User email subscription",
                    "format": "email",
                    "example": null
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                  }
                }
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User id",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Andrii"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "subscription": {
                    "type": "string",
                    "nullable": true,
                    "description": "User email subscription",
                    "format": "email",
                    "example": null
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://www.gravatar.com/avatar/d4d3e52f3e46c8fc33cca410a15f2fdc"
                  }
                }
              }
            }
          }
        }
      },
      "AddOwnRecipeRequest": {
        "type": "object",
        "required": [
          "thumb",
          "title",
          "category",
          "instructions",
          "description",
          "time",
          "ingredients"
        ],
        "properties": {
          "thumb": {
            "type": "string",
            "format": "binary",
            "description": "Recipe's image"
          },
          "title": {
            "type": "string",
            "description": "Recipe's title"
          },
          "category": {
            "type": "string",
            "description": "Recipe's category"
          },
          "instructions": {
            "type": "string",
            "description": "Recipe's instruction"
          },
          "description": {
            "type": "string",
            "description": "Recipe's description"
          },
          "time": {
            "type": "string",
            "description": "Recipe's time to cook"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Ingredient's id"
                },
                "measure": {
                  "type": "string",
                  "description": "Measure"
                }
              }
            }
          }
        }
      },
      "AddOwnRecipeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "recipe": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Recipe's title"
                  },
                  "category": {
                    "type": "string",
                    "description": "Recipe's category"
                  },
                  "area": {
                    "type": "string",
                    "description": "Recipe's area"
                  },
                  "instructions": {
                    "type": "string",
                    "description": "Instructions for cooking"
                  },
                  "description": {
                    "type": "string",
                    "description": "Recipe's description"
                  },
                  "thumb": {
                    "type": "string",
                    "description": "Link to get recipe's image from cloudinary"
                  },
                  "cloudinaryImageName": {
                    "type": "string",
                    "description": "Name of image in cloudinary storage"
                  },
                  "preview": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string",
                    "description": "Time for cooking"
                  },
                  "popularity": {
                    "type": "string"
                  },
                  "favorites": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "User's id which will add this recipe to favorite"
                    }
                  },
                  "likes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "youtube": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Ingredient's id"
                        },
                        "measure": {
                          "type": "string",
                          "description": "Ingredient's amount in different units"
                        }
                      }
                    }
                  },
                  "owner": {
                    "type": "string",
                    "description": "Person's id which added recipe"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Recipe's id, created MongoDB"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Date and time when recipe was created"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Date and time when recipe updates"
                  }
                }
              }
            }
          }
        }
      },
      "GetOwnRecipesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recipes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Recipe's title"
                    },
                    "category": {
                      "type": "string",
                      "description": "Recipe's category"
                    },
                    "area": {
                      "type": "string",
                      "description": "Recipe's area"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instructions for cooking"
                    },
                    "description": {
                      "type": "string",
                      "description": "Recipe's description"
                    },
                    "thumb": {
                      "type": "string",
                      "description": "Link to get recipe's image from cloudinary"
                    },
                    "cloudinaryImageName": {
                      "type": "string",
                      "description": "Name of image in cloudinary storage"
                    },
                    "preview": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string",
                      "description": "Time for cooking"
                    },
                    "popularity": {
                      "type": "string"
                    },
                    "favorites": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "User's id which will add this recipe to favorite"
                      }
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "youtube": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Ingredient's id"
                          },
                          "measure": {
                            "type": "string",
                            "description": "Ingredient's amount in different units"
                          }
                        }
                      }
                    },
                    "owner": {
                      "type": "string",
                      "description": "Person's id which added recipe"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Recipe's id, created MongoDB"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date and time when recipe was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date and time when recipe updates"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total recipe's amount"
              },
              "page": {
                "type": "integer",
                "description": "Current page"
              },
              "limit": {
                "type": "integer",
                "description": "Recipe's amount per page"
              }
            }
          }
        }
      },
      "GetPopularRecipesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status text",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "Response status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "recipes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Recipe's id, created MongoDB"
                    },
                    "title": {
                      "type": "string",
                      "description": "Recipe's title"
                    },
                    "category": {
                      "type": "string",
                      "description": "Recipe's category"
                    },
                    "area": {
                      "type": "string",
                      "description": "Recipe's area"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instructions for cooking"
                    },
                    "description": {
                      "type": "string",
                      "description": "Recipe's description"
                    },
                    "thumb": {
                      "type": "string",
                      "description": "Link to get recipe's image from image's storage"
                    },
                    "preview": {
                      "type": "string",
                      "description": "Link to get recipe's image from image's storage"
                    },
                    "time": {
                      "type": "string",
                      "description": "Time for cooking"
                    },
                    "popularity": {
                      "type": "integer"
                    },
                    "favorites": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "User's id which added this recipe to favorite"
                      }
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "User's id which liked this recipe"
                      }
                    },
                    "youtube": {
                      "type": "string",
                      "description": "Link to youtube video"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Ingredient's id"
                          },
                          "measure": {
                            "type": "string",
                            "description": "Ingredient's amount in different units"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date and time when recipe was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date and time when recipe updates"
                    },
                    "favoriteCount": {
                      "type": "integer",
                      "description": "Amount of users which added recipe to favorite"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total recipe's amount"
              },
              "page": {
                "type": "integer",
                "description": "Current page"
              },
              "limit": {
                "type": "integer",
                "description": "Recipe's amount per page"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
